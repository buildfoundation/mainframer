name: CI

on:
  push:
    branches: [ 3.x ]
  pull_request:
    branches: [ 3.x ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup Rust Build Env
        uses: actions-rs/toolchain@v1
        with:
          # Keep in sync with ci/rust.version
          toolchain: "1.63.0"
          override: true
          components: rustfmt, clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: build-linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        timeout-minutes: 5
        run: ci/build-linux.sh

      - name: build-macOS
        if: ${{ matrix.os == 'macos-latest' }}
        timeout-minutes: 5
        run: ci/build-macOS.sh

      - name: Check Code Formatting
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: cargo fmt --check || ( echo "run 'cargo fmt' to fix code formatting" && exit 1 )

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: artifacts/*
          retention-days: 21
          if-no-files-found: error

      - name: Upload release binaries
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*

  e2e-integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Docker Layer Cache
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: E2E Integration Tests
        timeout-minutes: 15
        run: ci/e2e-integration-tests.sh
